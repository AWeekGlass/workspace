package com.zj.alipay.service;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.alibaba.fastjson.JSON;
import com.alipay.api.AlipayApiException;
import com.alipay.api.AlipayClient;
import com.alipay.api.DefaultAlipayClient;
import com.alipay.api.internal.util.AlipaySignature;
import com.alipay.api.request.AlipayTradeCloseRequest;
import com.alipay.api.request.AlipayTradePagePayRequest;
import com.alipay.api.request.AlipayTradeQueryRequest;
import com.alipay.api.response.AlipayTradeCloseResponse;
import com.alipay.api.response.AlipayTradeQueryResponse;

@Component
public class AlipayService {
	@Value("${alipay.serverUrl}")
	private String serverUrl;

	@Value("${alipay.appId}")
	private String appId;

	@Value("${alipay.publicKey}")
	private String publicKey;

	@Value("${alipay.privateKey}")
	private String privateKey;

	/**
	 * 支付订单生成
	 * 
	 * @param outTradeNo     商户订单号
	 * @param orderAmount    订单金额
	 * @param passbackParams 公共回传参数
	 * @return 预订单信息，可直接给客户端请求
	 * @throws AlipayApiException
	 */
	public String generateTradeOrder(String outTradeNo, String orderAmount, String passbackParams)
			throws AlipayApiException {
		//获得初始化的AlipayClient
		AlipayClient alipayClient = new DefaultAlipayClient(serverUrl, appId, "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCL0OlzxnWnGtck1JF7a407tkoRomk1G2zRkCXwZag7CfVci45TPDWMRAEKqL8tUKzGAepPu6uBYqYCHnKPAV1QPNXUvv3o07B4EAWKNWMWW9XQ0WRLtU4F4z7HQ9KZ3pvz1+k4pEVvScmrIBSZCqbz/4xNF/l7o2p6AQFffETrbdxCdOcRH1k+OOXbM6mRL3id3uo+4IptWkCKStHDeUHxedEy5ytJHaz5YHzuUR8VXSK/tBLCpKvk6y5A5mkGAxdpEeOmow3jpv+4xh+2aE7E99UK6mSpFW7O7RCS+4DP8rAMB/T4Wj/IMgoumK5RcnmZUpwafeIG3A6o8kubO4NVAgMBAAECggEATJFB56c9cx/dxkuqyD4kABlaAsJAf1bfhvw76qShNoPDnMTIUojcgk4Ti/TRjU1q8JzH5pZN2/NcGjj2X55Nrc1DBNj7T+/t6jJL9l46P1pXg53IITXO3qaOEK3xvVYNbcJF9EDxzXpJOK++1/jfaSv/d5CzjaP2gY3fZJ03WP3mQ8kdRbzAMa9Ytq7n8PJ2ASl1XV9MZIMruzykWQ6qEGtR/F+/NOeUsWdNkNudPHBtasB1zADOeNpIslBILOQ4IELKsojYy3bqkMvju0afJLmiA8fStlBu2Tx1b186bnxyAcDZaqw8OiqA4VyW8lDniwWj5yV6mkucp36jYHd2wQKBgQDU2BPzZU02Qvei/CfL90AyQ27POM51i7EL+RFCEK3f0GoBDM/Pd5UH1Yl4C1biAFYE/cGQc7E3ZMEb1djmBxzbJF51W2J+rgtqfqyn9/XYJFU7XsJ2VoGsGNmSlOFGytoPaZK8KCtnbEr2gcCjqUvD0iDgz5dh9IH1cNYVt6oYLQKBgQCoKjrTd5fyZzxzZ0JQU/jlv3U8zJpr7s2J42EGBW3ZQVXendN8I+J60hF83GgkSavJnAPwG+r6UP8FXFZ2rQoQWtIUy4ibRqv1uROD4DY3Q25ahZxkvfnwNQ+itshtiSmvlXD9q6o87huU8/LQ/OtzbadRb0SzAJNBPbxoy7WoyQKBgQCchBz/sjG6QjqaVvTo73P8wku9BJgGJmhWVpyTSXKjED6zcPlsJhKohSWm6ifE39xhpTzu/bSG+Ids8a+jT/2vRKpVgJMIdvIcKPTMO/JENEuc8gzsOqb2p/tu6B5VEZyTEt59kMiCMEdbyIShlUAKyv20c9NtjAD5PTWhGMNzLQKBgB3tPgDKJLlX0/M5qhx/hSjl1KhYRRb2LY/fbjHTH4RtUynF7pAGFtUCs2gEFWh3z+GWKUE+xqd7aJb8osqF6ueUMhTPT+VKQ2n8YNO0QBG/p1DmvDlVcbhkyP6NBsgvg8KilrQeK7KiMThl3Y2BpSkql38vjQtKC+qtYO1Ja2+5AoGAK0uqx38tVs395fPxvcCVlTHWzCaTHWBkA1QAOu3gVEOpPk0Jm2eU1RurqBaU/edzz2/FgyJv7Zn5SowYK+z1mZZWEVlN11eKXND8N7LdaKsu+H5drlT6ZfoS0n5bv9dAKmWI+lhm+aR1ilAdQdhzFnYjImv6k25bd/Qs++d6fdc=", "json", "UTF-8","MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAi9Dpc8Z1pxrXJNSRe2uNO7ZKEaJpNRts0ZAl8GWoOwn1XIuOUzw1jEQBCqi/LVCsxgHqT7urgWKmAh5yjwFdUDzV1L796NOweBAFijVjFlvV0NFkS7VOBeM+x0PSmd6b89fpOKRFb0nJqyAUmQqm8/+MTRf5e6NqegEBX3xE623cQnTnER9ZPjjl2zOpkS94nd7qPuCKbVpAikrRw3lB8XnRMucrSR2s+WB87lEfFV0iv7QSwqSr5OsuQOZpBgMXaRHjpqMN46b/uMYftmhOxPfVCupkqRVuzu0QkvuAz/KwDAf0+Fo/yDIKLpiuUXJ5mVKcGn3iBtwOqPJLmzuDVQIDAQAB","RSA2");
		
		//设置请求参数
		AlipayTradePagePayRequest alipayRequest = new AlipayTradePagePayRequest();
		alipayRequest.setNotifyUrl("http://localhost:8080/aliPayNotify");
		
		alipayRequest.setBizContent("{\"out_trade_no\":\""+ outTradeNo +"\"," 
				+ "\"total_amount\":\""+ orderAmount +"\"," 
				+ "\"subject\":\""+ "反反復復" +"\"," 
				+ "\"body\":\""+ "地方大幅度" +"\"," 
				+ "\"timeout_express\":\"10m\"," 
				+ "\"product_code\":\"FAST_INSTANT_TRADE_PAY\"}");
		
		//请求
		String result = alipayClient.pageExecute(alipayRequest).getBody();
		return result;
	}

	/**
	 * 支付宝支付订单回调
	 * 
	 * @param request
	 * @return
	 * @throws AlipayApiException
	 */
	public Map<String, String> orderCallback(HttpServletRequest request) throws AlipayApiException {
		Map<String, String> params = new HashMap<String, String>();
		Map<String, String[]> map = request.getParameterMap();
		for (String key : map.keySet()) {
			String[] paramValues = request.getParameterValues(key);
			if (paramValues.length == 1) {
				String value = paramValues[0];
				params.put(key, value);
			}
		}
		boolean flag = AlipaySignature.rsaCheckV1(params, publicKey, "UTF-8", "RSA2");
		if (flag) {
			return params;
		}
		return null;
	}

	/**
	 * 支付交易订单查询
	 * 
	 * @param outTradeNo 商户订单号
	 * @param tradeNo    支付宝交易号
	 * @throws AlipayApiException
	 */
	public boolean tradeQuery(String outTradeNo, String tradeNo) throws AlipayApiException {
		AlipayClient alipayClient = new DefaultAlipayClient(serverUrl, appId, privateKey, "json", "UTF-8", publicKey,
				"RSA2");
		AlipayTradeQueryRequest request = new AlipayTradeQueryRequest();
		Map<String, String> bizContent = new HashMap<>();
		if (StringUtils.isNotBlank(outTradeNo)) {
			bizContent.put("out_trade_no", outTradeNo);
		}
		if (StringUtils.isNotBlank(tradeNo)) {
			bizContent.put("trade_no", tradeNo);
		}
		request.setBizContent(JSON.toJSONString(bizContent));
		AlipayTradeQueryResponse response = alipayClient.execute(request);
		return response.isSuccess();
	}

	/**
	 * 交易关闭
	 * 
	 * @param outTradeNo 商户订单号
	 * @param tradeNo    支付宝交易号
	 * @return
	 * @throws AlipayApiException
	 */
	public boolean tradeClose(String outTradeNo, String tradeNo) throws AlipayApiException {
		AlipayClient alipayClient = new DefaultAlipayClient(serverUrl, appId, privateKey, "json", "UTF-8", publicKey,
				"RSA2");
		AlipayTradeCloseRequest request = new AlipayTradeCloseRequest();
		Map<String, String> bizContent = new HashMap<>();
		if (StringUtils.isNotBlank(outTradeNo)) {
			bizContent.put("out_trade_no", outTradeNo);
		}
		if (StringUtils.isNotBlank(tradeNo)) {
			bizContent.put("trade_no", tradeNo);
		}
		request.setBizContent(JSON.toJSONString(bizContent));
		AlipayTradeCloseResponse response = alipayClient.execute(request);
		return response.isSuccess();
	}
}
